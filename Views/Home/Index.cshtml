@model IEnumerable<TempratureData>

@{
    ViewData["Title"] = "Home Page";



    var dataPoints = Model.OrderBy(dp => dp.CreationTime).TakeLast(10).ToList(); 


    var chartData = System.Text.Json.JsonSerializer.Serialize(dataPoints.Select(dp => new

    {

        CreationTime = dp.CreationTime?.AddHours(2).ToString("yyyy-MM-dd HH:mm:ss"), 

        Temperature = dp.Temperature

    }));
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <script src="https://cdn.canvasjs.com/canvasjs.min.js"></script>

    <style>
        #chartContainer {
            height: 400px;
            width: 100%;
            margin-top: 30px;
        }

        .btn-group {
            margin-top: 20px;
        }

        .scroll-btn {
            position: fixed;
            right: 20px;
            z-index: 1000;
            cursor: pointer;
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 50%;
            font-size: 18px;
            display: none;
        }

        .scroll-up-btn {
            bottom: 100px;
        }

        .scroll-down-btn {
            bottom: 40px;
        }
    </style>

    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            var dataPoints = @Html.Raw(chartData);

            console.log("Data Points:", dataPoints);

            function renderChart(dataPoints) {
                var tempDataPoints = dataPoints.map(function (dp) {
                    return {
                        x: new Date(dp.CreationTime), // Keep as is with adjusted time
                        y: dp.Temperature,
                        label: dp.CreationTime // Directly use the CreationTime string
                    };
                });

                var chart = new CanvasJS.Chart("chartContainer", {
                    theme: "light2",
                    animationEnabled: true,
                    title: {
                        text: "Temperature Over Time (Last 10 Data Points)"
                    },
                    axisX: {
                        title: "Time",
                        labelFormatter: function (e) {
                            var date = new Date(e.value);
                            return date.toLocaleTimeString('en-GB', { hour12: false }); 
                        },
                        valueFormatString: "HH:mm:ss",
                        labelAngle: -45,
                        intervalType: "minute",
                        interval: 1
                    },
                    axisY: {
                        title: "Temperature (°C)",
                        includeZero: false,
                        valueFormatString: "#0.##"
                    },
                    toolTip: {
                        content: "Time: {label}, Temperature: {y}°C"
                    },
                    data: [
                        {
                            type: "line",
                            name: "Temperature Over Time",
                            showInLegend: true,
                            dataPoints: tempDataPoints,
                            color: "#F5A623"
                        }
                    ]
                });
                chart.render();
            }

            renderChart(dataPoints);

            function scrollToTop() {
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }

            function scrollToBottom() {
                window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });
            }

            window.addEventListener('scroll', function () {
                const scrollUpBtn = document.getElementById('scrollUpBtn');
                const scrollDownBtn = document.getElementById('scrollDownBtn');
                if (window.scrollY > 100) {
                    scrollUpBtn.style.display = 'block';
                } else {
                    scrollUpBtn.style.display = 'none';
                }

                if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 100) {
                    scrollDownBtn.style.display = 'none';
                } else {
                    scrollDownBtn.style.display = 'block';
                }
            });

            document.getElementById('scrollUpBtn').addEventListener('click', scrollToTop);
            document.getElementById('scrollDownBtn').addEventListener('click', scrollToBottom);
        });
    </script>
</head>
<body>
    <div class="container">
        <div class="text-center">
            @if (ViewBag.Username != null)
            {
                    <h1 class="display-4">Welcome, @ViewBag.Username!</h1>
            }
            else
            {
                    <h1 class="display-4">Welcome, guest!</h1>
            }
        </div>

        <div class="text-center btn-group">
            <form method="get" action="@Url.Action("Index", "Home")">
                <button name="days" value="7" class="btn btn-primary">Last 7 Days</button>
                <button name="days" value="14" class="btn btn-secondary">Last 14 Days</button>
                <button name="days" value="30" class="btn btn-success">Last 30 Days</button>
            </form>
        </div>

        <div class="mt-4">
            <table class="table table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>CreationTime</th>
                        <th>Temperature (°C)</th>
                        <th>Info</th>
                    </tr>
                </thead>
                <tbody id="data-table-body">
                    @foreach (var item in Model)

                    {
                            <tr>
                                <td>@item.CreationTime?.AddHours(2).ToString("yyyy-MM-dd   HH:mm:ss")</td>
                                <td>@item.Temperature.ToString("0.##")</td>
                                <td>@item.Info</td>
                            </tr>
                    }
                </tbody>
            </table>
        </div>

        <div id="chartContainer"></div>
    </div>

    <button id="scrollUpBtn" class="scroll-btn scroll-up-btn">
        <i class="fas fa-chevron-up"></i>
    </button>
    <button id="scrollDownBtn" class="scroll-btn scroll-down-btn">
        <i class="fas fa-chevron-down"></i>
    </button>
</body>
</html>
